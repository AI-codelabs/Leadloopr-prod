{"version":3,"file":"leadloopr-tracker.iife.js","sources":["../src/config.ts","../src/consent.ts","../src/attribution.ts","../src/extractor.ts","../src/payload.ts","../src/forms.ts","../src/bootstrap.ts","../src/init.ts"],"sourcesContent":["declare global {\n    interface Window {\n        LEADLOOPR_DEBUG?: boolean;\n    }\n}\n\nexport interface FeatureFlags {\n    allowConsentFallback?: boolean;\n    allowDynamicForms?: boolean;\n}\n\nexport interface TrackerConfig {\n    orgId: string;\n    debug: boolean;\n    endpoint: string;\n    featureFlags: FeatureFlags;\n}\n\nconst SCRIPT_ID = 'leadloopr-tracker';\nconst REQUIRED_ATTR = 'data-org-id';\nconst DEBUG_ATTR = 'data-debug';\nconst ENDPOINT_ATTR = 'data-endpoint';\nconst FEATURE_FLAGS_ATTR = 'data-feature-flags';\n\nconst DEFAULT_ENDPOINT = 'https://api.leadloopr.com/track/lead';\nconst DEFAULT_FEATURE_FLAGS: FeatureFlags = {\n    allowConsentFallback: true,\n    allowDynamicForms: true,\n};\n\nfunction findTrackerScript(): HTMLScriptElement | null {\n    // First try to find by ID\n    const scriptById = document.getElementById(SCRIPT_ID) as HTMLScriptElement;\n    if (scriptById?.tagName === 'SCRIPT') return scriptById;\n\n    // Then try to find by src containing our filename\n    const scriptBySrc = Array.from(document.getElementsByTagName('script')).find(\n        (script) => script.src.includes('leadloopr-tracker.js')\n    );\n    return scriptBySrc as HTMLScriptElement || null;\n}\n\nfunction getRequiredOrgId(script: HTMLScriptElement): string {\n    const orgId = script.getAttribute(REQUIRED_ATTR);\n    if (!orgId || orgId.trim() === '') {\n        throw new Error(\n            `LeadLoopr: Missing required attribute \"${REQUIRED_ATTR}\" on script tag. ` +\n            `Please add data-org-id=\"your-organization-id\" to the script tag.`\n        );\n    }\n    return orgId.trim();\n}\n\nfunction getDebugMode(script: HTMLScriptElement): boolean {\n    const debugAttr = script.getAttribute(DEBUG_ATTR);\n    const windowDebug = window.LEADLOOPR_DEBUG;\n\n    // Check script attribute first, then window flag\n    if (debugAttr !== null) {\n        return debugAttr === 'true' || debugAttr === '1';\n    }\n\n    return windowDebug === true;\n}\n\nfunction getEndpoint(script: HTMLScriptElement): string {\n    const endpoint = script.getAttribute(ENDPOINT_ATTR);\n    return endpoint?.trim() || DEFAULT_ENDPOINT;\n}\n\nfunction parseFeatureFlags(script: HTMLScriptElement): FeatureFlags {\n    const flagsAttr = script.getAttribute(FEATURE_FLAGS_ATTR);\n    if (!flagsAttr) return DEFAULT_FEATURE_FLAGS;\n\n    try {\n        const parsed = JSON.parse(flagsAttr);\n        return {\n            allowConsentFallback: parsed.allowConsentFallback ?? DEFAULT_FEATURE_FLAGS.allowConsentFallback,\n            allowDynamicForms: parsed.allowDynamicForms ?? DEFAULT_FEATURE_FLAGS.allowDynamicForms,\n        };\n    } catch (error) {\n        console.warn('LeadLoopr: Invalid feature flags JSON, using defaults:', error);\n        return DEFAULT_FEATURE_FLAGS;\n    }\n}\n\nfunction validateConfig(config: TrackerConfig): void {\n    if (!config.orgId || config.orgId.trim() === '') {\n        throw new Error('LeadLoopr: Organization ID cannot be empty');\n    }\n\n    if (!config.endpoint || config.endpoint.trim() === '') {\n        throw new Error('LeadLoopr: Endpoint cannot be empty');\n    }\n\n    // Validate endpoint format\n    try {\n        new URL(config.endpoint);\n    } catch {\n        throw new Error(`LeadLoopr: Invalid endpoint URL: ${config.endpoint}`);\n    }\n}\n\nexport function getTrackerConfig(): TrackerConfig {\n    const script = findTrackerScript();\n\n    if (!script) {\n        throw new Error(\n            'LeadLoopr: Could not find tracker script tag. ' +\n            'Make sure the script has id=\"leadloopr-tracker\" or src contains \"leadloopr-tracker.js\"'\n        );\n    }\n\n    const config: TrackerConfig = {\n        orgId: getRequiredOrgId(script),\n        debug: getDebugMode(script),\n        endpoint: getEndpoint(script),\n        featureFlags: parseFeatureFlags(script),\n    };\n\n    // Validate the complete config\n    validateConfig(config);\n\n    if (config.debug) {\n        console.log('LeadLoopr: Config loaded successfully:', {\n            orgId: config.orgId,\n            debug: config.debug,\n            endpoint: config.endpoint,\n            featureFlags: config.featureFlags,\n        });\n    }\n\n    return config;\n}\n","import type { TrackerConfig } from './config';\n\ndeclare global {\n    interface Window {\n        gtag?: (\n            command: string,\n            action: string,\n            callback?: (consent: Record<string, string>) => void\n        ) => void;\n    }\n}\n\nexport type ConsentReason =\n    | 'google-consent'\n    | 'fallback-cookie'\n    | 'fallback-localStorage'\n    | 'none';\n\nexport interface ConsentStatus {\n    granted: boolean;\n    reason: ConsentReason;\n}\n\nconst CONSENT_COOKIE = 'cookie_consent';\nconst CONSENT_STORAGE_KEY = 'leadloopr_consent';\n\nfunction checkGoogleConsent(): Promise<ConsentStatus> {\n    return new Promise((resolve) => {\n        if (typeof window.gtag !== 'function') {\n            resolve({ granted: false, reason: 'none' });\n            return;\n        }\n\n        window.gtag('consent', 'get', (consent) => {\n            const isGranted =\n                consent?.ad_storage === 'granted' ||\n                consent?.analytics_storage === 'granted' ||\n                consent?.functionality_storage === 'granted';\n\n            resolve({\n                granted: isGranted,\n                reason: isGranted ? 'google-consent' : 'none',\n            });\n        });\n    });\n}\n\nfunction checkCookieConsent(): ConsentStatus {\n    const cookies = document.cookie.split(';');\n    const hasConsent = cookies.some((cookie) =>\n        cookie.trim().startsWith(`${CONSENT_COOKIE}=true`)\n    );\n\n    return {\n        granted: hasConsent,\n        reason: hasConsent ? 'fallback-cookie' : 'none',\n    };\n}\n\nfunction checkLocalStorageConsent(): ConsentStatus {\n    const hasConsent = localStorage.getItem(CONSENT_STORAGE_KEY) === 'true';\n    return {\n        granted: hasConsent,\n        reason: hasConsent ? 'fallback-localStorage' : 'none',\n    };\n}\n\nexport async function checkConsent(config: TrackerConfig): Promise<ConsentStatus> {\n    if (config.debug) {\n        console.log('LeadLoopr: Checking consent status...');\n    }\n\n    // First try Google Consent Mode\n    const googleConsent = await checkGoogleConsent();\n    if (googleConsent.granted) {\n        if (config.debug) {\n            console.log('LeadLoopr: Consent granted via Google Consent Mode');\n        }\n        return googleConsent;\n    }\n\n    // Check if consent fallback is enabled\n    if (!config.featureFlags.allowConsentFallback) {\n        if (config.debug) {\n            console.log('LeadLoopr: Consent fallback disabled, no consent granted');\n        }\n        return { granted: false, reason: 'none' };\n    }\n\n    // Then try cookie fallback\n    const cookieConsent = checkCookieConsent();\n    if (cookieConsent.granted) {\n        if (config.debug) {\n            console.log('LeadLoopr: Consent granted via cookie');\n        }\n        return cookieConsent;\n    }\n\n    // Finally try localStorage fallback\n    const storageConsent = checkLocalStorageConsent();\n    if (storageConsent.granted) {\n        if (config.debug) {\n            console.log('LeadLoopr: Consent granted via localStorage');\n        }\n        return storageConsent;\n    }\n\n    if (config.debug) {\n        console.log('LeadLoopr: No consent granted');\n    }\n    return { granted: false, reason: 'none' };\n} ","import type { TrackerConfig } from './config';\n\nexport interface AttributionData {\n    landing_page: string;\n    referrer?: string;\n    utm_source?: string;\n    utm_medium?: string;\n    utm_campaign?: string;\n    utm_term?: string;\n    utm_content?: string;\n    gclid?: string;\n    fbclid?: string;\n    li_fat_id?: string;\n    timestamp: number;\n}\n\nconst UTM_PARAMS = [\n    'utm_source',\n    'utm_medium',\n    'utm_campaign',\n    'utm_term',\n    'utm_content',\n] as const;\n\nconst CLICK_IDS = ['gclid', 'fbclid', 'li_fat_id'] as const;\n\nconst SESSION_STORAGE_KEY = 'leadloopr_attribution';\n\nfunction getCanonicalUrl(): string {\n    try {\n        // Try to get canonical URL first\n        const canonical = document.querySelector('link[rel=\"canonical\"]') as HTMLLinkElement;\n        if (canonical?.href) {\n            return canonical.href;\n        }\n\n        // Fallback to current URL\n        return window.location.href;\n    } catch (error) {\n        // Fallback to current URL if anything fails\n        return window.location.href;\n    }\n}\n\nfunction parseQueryParams(url: string): Record<string, string> {\n    const params: Record<string, string> = {};\n\n    try {\n        const urlObj = new URL(url);\n        const searchParams = urlObj.searchParams;\n\n        // Parse UTM parameters\n        UTM_PARAMS.forEach((param) => {\n            const value = searchParams.get(param);\n            if (value && value.trim()) {\n                params[param] = value.trim();\n            }\n        });\n\n        // Parse click IDs\n        CLICK_IDS.forEach((id) => {\n            const value = searchParams.get(id);\n            if (value && value.trim()) {\n                params[id] = value.trim();\n            }\n        });\n\n    } catch (error) {\n        // Silently fail and return empty params\n        console.warn('LeadLoopr: Failed to parse URL parameters:', error);\n    }\n\n    return params;\n}\n\nfunction getReferrer(): string | undefined {\n    try {\n        const referrer = document.referrer;\n\n        // Only return if it's not empty and not from the same domain\n        if (referrer && referrer.trim() && !referrer.startsWith(window.location.origin)) {\n            return referrer.trim();\n        }\n\n        return undefined;\n    } catch (error) {\n        console.warn('LeadLoopr: Failed to get referrer:', error);\n        return undefined;\n    }\n}\n\nfunction getCachedAttribution(): AttributionData | null {\n    try {\n        const cached = sessionStorage.getItem(SESSION_STORAGE_KEY);\n        if (cached) {\n            return JSON.parse(cached);\n        }\n    } catch (error) {\n        console.warn('LeadLoopr: Failed to read cached attribution:', error);\n    }\n    return null;\n}\n\nfunction cacheAttribution(attribution: AttributionData): void {\n    try {\n        sessionStorage.setItem(SESSION_STORAGE_KEY, JSON.stringify(attribution));\n    } catch (error) {\n        console.warn('LeadLoopr: Failed to cache attribution:', error);\n    }\n}\n\nfunction validateAttributionData(data: AttributionData): boolean {\n    return (\n        typeof data.landing_page === 'string' &&\n        data.landing_page.length > 0 &&\n        typeof data.timestamp === 'number' &&\n        data.timestamp > 0\n    );\n}\n\nexport function initAttribution(config: TrackerConfig): AttributionData {\n    if (config.debug) {\n        console.log('LeadLoopr: Initializing attribution tracking');\n    }\n\n    // Check for cached attribution first\n    const cached = getCachedAttribution();\n    if (cached && validateAttributionData(cached)) {\n        if (config.debug) {\n            console.log('LeadLoopr: Using cached attribution data');\n        }\n        return cached;\n    }\n\n    // Generate new attribution data\n    const landingPage = getCanonicalUrl();\n    const params = parseQueryParams(landingPage);\n    const referrer = getReferrer();\n\n    const attribution: AttributionData = {\n        landing_page: landingPage,\n        referrer,\n        ...params,\n        timestamp: Date.now(),\n    };\n\n    // Validate the generated data\n    if (!validateAttributionData(attribution)) {\n        if (config.debug) {\n            console.warn('LeadLoopr: Generated invalid attribution data, using fallback');\n        }\n        // Fallback to minimal valid data\n        attribution.landing_page = window.location.href;\n        attribution.timestamp = Date.now();\n    }\n\n    // Cache the attribution data\n    cacheAttribution(attribution);\n\n    if (config.debug) {\n        console.log('LeadLoopr: Attribution data captured:', {\n            landing_page: attribution.landing_page,\n            referrer: attribution.referrer,\n            utm_params: {\n                utm_source: attribution.utm_source,\n                utm_medium: attribution.utm_medium,\n                utm_campaign: attribution.utm_campaign,\n                utm_term: attribution.utm_term,\n                utm_content: attribution.utm_content,\n            },\n            click_ids: {\n                gclid: attribution.gclid,\n                fbclid: attribution.fbclid,\n                li_fat_id: attribution.li_fat_id,\n            },\n            timestamp: attribution.timestamp,\n        });\n    }\n\n    return attribution;\n} ","import type { ConsentStatus } from './consent';\n\n// Fields that contain PII and require consent\nconst PII_FIELDS = [\n    'name',\n    'full_name',\n    'first_name',\n    'last_name',\n    'email',\n    'user_email',\n    'phone',\n    'tel',\n    'telephone',\n    'mobile',\n    'cell',\n] as const;\n\nexport interface FilteredFormData {\n    data: Record<string, string>;\n    excluded: string[];\n}\n\nfunction isPIIField(key: string): boolean {\n    const normalizedKey = key.toLowerCase().replace(/[_-]/g, '');\n    return PII_FIELDS.some((field) =>\n        normalizedKey.includes(field.toLowerCase().replace(/[_-]/g, ''))\n    );\n}\n\nexport function filterFormDataForConsent(\n    rawData: Record<string, string | undefined>,\n    consent: ConsentStatus,\n    debug = false\n): FilteredFormData {\n    if (debug) {\n        console.log('LeadLoopr: Filtering form data for consent:', {\n            consent,\n            rawData,\n        });\n    }\n\n    // If consent is granted, return all data\n    if (consent.granted) {\n        if (debug) {\n            console.log('LeadLoopr: Consent granted, including all data');\n        }\n        return {\n            data: rawData as Record<string, string>,\n            excluded: [],\n        };\n    }\n\n    // Filter out PII fields\n    const data: Record<string, string> = {};\n    const excluded: string[] = [];\n\n    Object.entries(rawData).forEach(([key, value]) => {\n        if (value && !isPIIField(key)) {\n            data[key] = value;\n        } else if (value) {\n            excluded.push(key);\n        }\n    });\n\n    if (debug) {\n        console.log('LeadLoopr: Consent not granted, filtered data:', {\n            included: Object.keys(data),\n            excluded,\n        });\n    }\n\n    return { data, excluded };\n} ","import type { AttributionData } from './attribution';\nimport type { ConsentStatus } from './consent';\n\nconst MAX_RETRIES = 3;\nconst RETRY_DELAYS = [500, 1500, 3000]; // Exponential backoff delays in ms\n\nexport interface LeadPayload {\n    org_id: string;\n    timestamp: number;\n    attribution: AttributionData;\n    consent: ConsentStatus;\n    form_data: Record<string, string>;\n}\n\nasync function sleep(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nasync function attemptSend(\n    payload: LeadPayload,\n    endpoint: string,\n    attempt: number,\n    debug: boolean\n): Promise<boolean> {\n    try {\n        const response = await fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            credentials: 'omit',\n            body: JSON.stringify(payload),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        if (debug) {\n            console.log('LeadLoopr: Lead payload sent successfully');\n        }\n        return true;\n    } catch (error) {\n        if (debug) {\n            console.warn(`LeadLoopr: Send attempt ${attempt} failed:`, error);\n        }\n        return false;\n    }\n}\n\nexport async function sendLeadPayload(\n    payload: LeadPayload,\n    endpoint: string,\n    debug = false\n): Promise<void> {\n    if (debug) {\n        console.log('LeadLoopr: Sending lead payload:', payload);\n    }\n\n    let success = false;\n    let attempt = 0;\n\n    while (!success && attempt < MAX_RETRIES) {\n        if (attempt > 0) {\n            const delay = RETRY_DELAYS[attempt - 1];\n            if (debug) {\n                console.log(`LeadLoopr: Retrying in ${delay}ms (attempt ${attempt + 1}/${MAX_RETRIES})`);\n            }\n            await sleep(delay);\n        }\n\n        success = await attemptSend(payload, endpoint, attempt + 1, debug);\n        attempt++;\n    }\n\n    if (!success && debug) {\n        console.error('LeadLoopr: Failed to send lead payload after all retries');\n    }\n} ","import type { TrackerConfig } from './config';\nimport type { AttributionData } from './attribution';\nimport type { ConsentStatus } from './consent';\nimport { filterFormDataForConsent } from './extractor';\nimport { sendLeadPayload } from './payload';\n\ninterface FormData {\n    name?: string;\n    email?: string;\n    phone?: string;\n    [key: string]: string | undefined;\n}\n\n// Common field name variations\nconst FIELD_PATTERNS: Record<string, string[]> = {\n    name: ['name', 'full_name', 'first_name', 'last_name', 'fullname', 'fullName'],\n    email: ['email', 'user_email', 'userEmail', 'e-mail', 'mail'],\n    phone: ['phone', 'tel', 'telephone', 'mobile', 'cell'],\n} as const;\n\nfunction normalizeFieldName(name: string): string {\n    return name.toLowerCase().replace(/[_-]/g, '');\n}\n\nfunction extractFieldValue(form: HTMLFormElement, patterns: string[]): string | undefined {\n    for (const pattern of patterns) {\n        const input = form.querySelector(`[name=\"${pattern}\"], [id=\"${pattern}\"], [name*=\"${pattern}\"], [id*=\"${pattern}\"]`) as HTMLInputElement;\n        if (input?.value) {\n            return input.value.trim();\n        }\n    }\n    return undefined;\n}\n\nfunction extractFormData(form: HTMLFormElement): FormData {\n    const formData = new FormData(form);\n    const data: FormData = {};\n\n    // Extract standard fields\n    Object.entries(FIELD_PATTERNS).forEach(([field, patterns]) => {\n        const value = extractFieldValue(form, patterns);\n        if (value) {\n            data[field] = value;\n        }\n    });\n\n    // Extract any additional fields\n    formData.forEach((value, key) => {\n        if (typeof value === 'string' && value.trim()) {\n            data[key] = value.trim();\n        }\n    });\n\n    return data;\n}\n\nasync function handleFormSubmit(\n    event: SubmitEvent,\n    config: TrackerConfig,\n    attribution: AttributionData,\n    consent: ConsentStatus\n): Promise<void> {\n    const form = event.target as HTMLFormElement;\n\n    // Prevent duplicate handling\n    if (form.hasAttribute('data-leadloopr-tracked')) {\n        return;\n    }\n    form.setAttribute('data-leadloopr-tracked', 'true');\n\n    // Extract form data\n    const rawFormData = extractFormData(form);\n\n    // Filter data based on consent\n    const { data: filteredData, excluded } = filterFormDataForConsent(\n        rawFormData,\n        consent,\n        config.debug\n    );\n\n    if (config.debug) {\n        console.log('LeadLoopr: Form submitted:', {\n            form: form.id || form.name || 'unnamed',\n            rawData: rawFormData,\n            filteredData,\n            excluded,\n            attribution,\n        });\n    }\n\n    // Send payload to backend\n    await sendLeadPayload(\n        {\n            org_id: config.orgId,\n            timestamp: Date.now(),\n            attribution,\n            consent,\n            form_data: filteredData,\n        },\n        config.endpoint,\n        config.debug\n    );\n}\n\nexport function trackForms(\n    config: TrackerConfig,\n    attribution: AttributionData,\n    consent: ConsentStatus\n): void {\n    if (config.debug) {\n        console.log('LeadLoopr: Initializing form tracking');\n    }\n\n    // Find all forms\n    const forms = document.querySelectorAll('form');\n\n    if (config.debug) {\n        console.log(`LeadLoopr: Found ${forms.length} forms to track`);\n    }\n\n    // Attach submit listeners\n    forms.forEach((form) => {\n        form.addEventListener('submit', (event) =>\n            handleFormSubmit(event, config, attribution, consent)\n        );\n    });\n\n    // Handle dynamically added forms only if enabled\n    if (config.featureFlags.allowDynamicForms) {\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                mutation.addedNodes.forEach((node) => {\n                    if (node instanceof HTMLElement) {\n                        const forms = node.querySelectorAll('form');\n                        forms.forEach((form) => {\n                            if (!form.hasAttribute('data-leadloopr-tracked')) {\n                                form.addEventListener('submit', (event) =>\n                                    handleFormSubmit(event, config, attribution, consent)\n                                );\n                            }\n                        });\n                    }\n                });\n            });\n        });\n\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true,\n        });\n\n        if (config.debug) {\n            console.log('LeadLoopr: Dynamic form tracking enabled');\n        }\n    } else if (config.debug) {\n        console.log('LeadLoopr: Dynamic form tracking disabled');\n    }\n\n    if (config.debug) {\n        console.log('LeadLoopr: Form tracking initialized');\n    }\n} ","import { getTrackerConfig, type TrackerConfig } from './config';\nimport { checkConsent, type ConsentStatus } from './consent';\nimport { initAttribution, type AttributionData } from './attribution';\nimport { trackForms } from './forms';\n\ndeclare global {\n    interface Window {\n        __LEADLOOPR_INITIALIZED__?: boolean;\n    }\n}\n\nasync function initialize(config: TrackerConfig): Promise<void> {\n    if (config.debug) {\n        console.log('LeadLoopr: Starting initialization');\n    }\n\n    // Check consent before proceeding\n    const consent = await checkConsent(config);\n    if (!consent.granted) {\n        if (config.debug) {\n            console.log('LeadLoopr: Consent not granted, reason:', consent.reason);\n        }\n        return;\n    }\n\n    // Initialize attribution (doesn't require consent)\n    const attribution = initAttribution(config);\n\n    // Initialize form tracking with attribution data and consent status\n    trackForms(config, attribution, consent);\n\n    if (config.debug) {\n        console.log('LeadLoopr: Initialization complete');\n    }\n}\n\nexport function bootstrap(): void {\n    // Prevent double initialization\n    if (window.__LEADLOOPR_INITIALIZED__) {\n        console.warn('LeadLoopr: Script already initialized');\n        return;\n    }\n\n    // Function to handle initialization\n    const init = async () => {\n        try {\n            const config = getTrackerConfig();\n            await initialize(config);\n            window.__LEADLOOPR_INITIALIZED__ = true;\n        } catch (error) {\n            console.error('LeadLoopr: Initialization failed:', error);\n        }\n    };\n\n    // Check if DOM is already loaded\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', init);\n    } else {\n        init();\n    }\n}\n","// LeadLoopr Tracker\n// This is the entry point for the tracking script\n\nimport { bootstrap } from './bootstrap';\n\nexport const init = () => {\n    bootstrap();\n}; "],"names":["SCRIPT_ID","REQUIRED_ATTR","DEBUG_ATTR","ENDPOINT_ATTR","FEATURE_FLAGS_ATTR","DEFAULT_ENDPOINT","DEFAULT_FEATURE_FLAGS","findTrackerScript","scriptById","script","getRequiredOrgId","orgId","getDebugMode","debugAttr","windowDebug","getEndpoint","endpoint","parseFeatureFlags","flagsAttr","parsed","error","validateConfig","config","getTrackerConfig","CONSENT_COOKIE","CONSENT_STORAGE_KEY","checkGoogleConsent","resolve","consent","isGranted","checkCookieConsent","hasConsent","cookie","checkLocalStorageConsent","checkConsent","googleConsent","cookieConsent","storageConsent","UTM_PARAMS","CLICK_IDS","SESSION_STORAGE_KEY","getCanonicalUrl","canonical","parseQueryParams","url","params","searchParams","param","value","id","getReferrer","referrer","getCachedAttribution","cached","cacheAttribution","attribution","validateAttributionData","data","initAttribution","landingPage","PII_FIELDS","isPIIField","key","normalizedKey","field","filterFormDataForConsent","rawData","debug","excluded","MAX_RETRIES","RETRY_DELAYS","sleep","ms","attemptSend","payload","attempt","response","sendLeadPayload","success","delay","FIELD_PATTERNS","extractFieldValue","form","patterns","pattern","input","extractFormData","formData","handleFormSubmit","event","rawFormData","filteredData","trackForms","forms","mutations","mutation","node","initialize","bootstrap","init"],"mappings":"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"}